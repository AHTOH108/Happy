package com.iandp.happy.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.iandp.happy.database.DBProduct;
import com.iandp.happy.database.DBImage;
import com.iandp.happy.database.DBCategoryProduct;
import com.iandp.happy.database.DBCost;
import com.iandp.happy.database.DBShop;

import com.iandp.happy.database.DBProductDao;
import com.iandp.happy.database.DBImageDao;
import com.iandp.happy.database.DBCategoryProductDao;
import com.iandp.happy.database.DBCostDao;
import com.iandp.happy.database.DBShopDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBProductDaoConfig;
    private final DaoConfig dBImageDaoConfig;
    private final DaoConfig dBCategoryProductDaoConfig;
    private final DaoConfig dBCostDaoConfig;
    private final DaoConfig dBShopDaoConfig;

    private final DBProductDao dBProductDao;
    private final DBImageDao dBImageDao;
    private final DBCategoryProductDao dBCategoryProductDao;
    private final DBCostDao dBCostDao;
    private final DBShopDao dBShopDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBProductDaoConfig = daoConfigMap.get(DBProductDao.class).clone();
        dBProductDaoConfig.initIdentityScope(type);

        dBImageDaoConfig = daoConfigMap.get(DBImageDao.class).clone();
        dBImageDaoConfig.initIdentityScope(type);

        dBCategoryProductDaoConfig = daoConfigMap.get(DBCategoryProductDao.class).clone();
        dBCategoryProductDaoConfig.initIdentityScope(type);

        dBCostDaoConfig = daoConfigMap.get(DBCostDao.class).clone();
        dBCostDaoConfig.initIdentityScope(type);

        dBShopDaoConfig = daoConfigMap.get(DBShopDao.class).clone();
        dBShopDaoConfig.initIdentityScope(type);

        dBProductDao = new DBProductDao(dBProductDaoConfig, this);
        dBImageDao = new DBImageDao(dBImageDaoConfig, this);
        dBCategoryProductDao = new DBCategoryProductDao(dBCategoryProductDaoConfig, this);
        dBCostDao = new DBCostDao(dBCostDaoConfig, this);
        dBShopDao = new DBShopDao(dBShopDaoConfig, this);

        registerDao(DBProduct.class, dBProductDao);
        registerDao(DBImage.class, dBImageDao);
        registerDao(DBCategoryProduct.class, dBCategoryProductDao);
        registerDao(DBCost.class, dBCostDao);
        registerDao(DBShop.class, dBShopDao);
    }
    
    public void clear() {
        dBProductDaoConfig.getIdentityScope().clear();
        dBImageDaoConfig.getIdentityScope().clear();
        dBCategoryProductDaoConfig.getIdentityScope().clear();
        dBCostDaoConfig.getIdentityScope().clear();
        dBShopDaoConfig.getIdentityScope().clear();
    }

    public DBProductDao getDBProductDao() {
        return dBProductDao;
    }

    public DBImageDao getDBImageDao() {
        return dBImageDao;
    }

    public DBCategoryProductDao getDBCategoryProductDao() {
        return dBCategoryProductDao;
    }

    public DBCostDao getDBCostDao() {
        return dBCostDao;
    }

    public DBShopDao getDBShopDao() {
        return dBShopDao;
    }

}
